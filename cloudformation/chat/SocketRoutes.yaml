Parameters:
  SocketApi:
    Type: String
    Description: WebSocketApi string arn

  DefaultIntegration:
    Type: String
  ConnectIntegration:
    Type: String
    Description: Integration for the connect Route but I need an uri
  DisconnectIntegration:
    Type: String
  SendMessageIntegration:
    Type: String

  DefaultLambda:
    Type: String
  ConnectLambda:
    Type: String
    Description: Lambda for the connect Route but I need an uri
  DisconnectLambda:
    Type: String
  SendMessageLambda:
    Type: String




Resources:

  DefaultRoute:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId: !Ref SocketApi
      RouteKey: $default
      Target: !Sub "integrations/${DefaultIntegration}"


  DefaultAPIInvokeLambdaPermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref DefaultLambda
      Action: lambda:InvokeFunction
      Principal: apigateway.amazonaws.com
      SourceArn: !Sub arn:${AWS::Partition}:execute-api:${AWS::Region}:${AWS::AccountId}:${SocketApi}/*/$default

  ConnectRoute:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId: !Ref SocketApi
      RouteKey: $connect
      AuthorizationType: NONE
      Target: !Join
      Target: !Sub "integrations/${ConnectLambda}"

  ConnectAPIInvokeLambdaPermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref ConnectLambda
      Action: lambda:InvokeFunction
      Principal: apigateway.amazonaws.com
      SourceArn: !Sub arn:${AWS::Partition}:execute-api:${AWS::Region}:${AWS::AccountId}:${SocketApi}/*/$connect

  DisconnectRoute:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId: !Ref SocketApi
      RouteKey: $disconnect
      Target: !Sub "integrations/${DisconnectLambda}"

  DisconnectAPIInvokeLambdaPermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref DisconnectLambda
      Action: lambda:InvokeFunction
      Principal: apigateway.amazonaws.com
      SourceArn: !Sub arn:${AWS::Partition}:execute-api:${AWS::Region}:${AWS::AccountId}:${SocketApi}/beta/$disconnect


  SendMessageRoute:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId: !Ref SocketApi
      RouteKey: sendmessage
      Target: !Sub "integrations/${SendMessageLambda}"

  SendMessageAPIInvokeLambdaPermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref SendMessageLambda
      Action: lambda:InvokeFunction
      Principal: apigateway.amazonaws.com
      SourceArn: !Sub arn:${AWS::Partition}:execute-api:${AWS::Region}:${AWS::AccountId}:${SocketApi}/beta/sendmessage

Outputs:
  Debug1:
    Value: !Sub arn:${AWS::Partition}:execute-api:${AWS::Region}:${AWS::AccountId}:${SocketApi}/beta/sendmessage

  Debug2:
    Value: !Sub ${SocketApi}

  Debug3:
    Value: !Ref SocketApi




    
