Parameters:
  MainVPC:
    Type: String

  LaunchTemplateEc2Micro:
    Type: String

  TargetSubnetA:
    Type: String
  TargetSubnetB:
    Type: String

Resources:
#--------------------------------------Auto Scaling Group-------------------------------
  
  IncomingTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Name: incoming-target-group
      Port: 80
      Protocol: HTTP
      VpcId: !Ref MainVPC
      TargetType: instance
      HealthCheckProtocol: HTTP
      HealthCheckPath: /health.html  # 
      HealthCheckIntervalSeconds: 30  #
      HealthCheckTimeoutSeconds: 5   #
      HealthyThresholdCount: 2       #
      UnhealthyThresholdCount: 2     #
      Matcher:
        HttpCode: 200

  
  WebServerASG:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      AutoScalingGroupName: !Sub ${AWS::StackName}-ASG
      AvailabilityZones: 
        - "us-east-1a"
        - "us-east-1b"
      DefaultInstanceWarmup: 0
      DesiredCapacity: 1
      #DesiredCapacityType: vcpu
      LaunchTemplate: 
        LaunchTemplateId: !Ref LaunchTemplateEc2Micro
        Version: "1" #!GetAtt LaunchTemplateEc2Micro.LatestVersionNumber
      MaxSize: 1
      MinSize: 1
      NewInstancesProtectedFromScaleIn: false
      #PlacementGroup: String
      #ServiceLinkedRoleARN: String
      #Tags: 
        #- TagProperty
      TargetGroupARNs: 
        - !Ref IncomingTargetGroup
      VPCZoneIdentifier:
        - !Ref TargetSubnetA
        - !Ref TargetSubnetB


Outputs:
  WebServerASG:
    Value: !Ref WebServerASG

  IncomingTargetGroup:
    Value: !Ref IncomingTargetGroup
