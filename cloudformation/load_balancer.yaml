
Parameters:
  MainVPC:
    Type: String

  FirstPublicSubnet:
    Type: String
  FirstPrivateSubnet:
    Type: String
  SecondPrivateSubnet:
    Type: String
  ALBSecurityGroup:
    Type: String
  IncomingTargetGroup:
    Type: String

  WebServerASG:
    Type: String

Resources:


  # Bastion Host in Public Subnet A (AZ1)
  IncomingTrafficLoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      IpAddressType: ipv4
      Name: IncomingTrafficLoadBalancer
      SecurityGroups:
        - !Ref ALBSecurityGroup  # AQUÍ: Añadir referencia al Security Group nuevo
      Subnets: 
        - !Ref FirstPublicSubnet
        - !Ref SecondPublicSubnet
      Type: application

  LoadBalancerListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref IncomingTargetGroup
      LoadBalancerArn: !Ref IncomingTrafficLoadBalancer
      Port: 80
      Protocol: HTTP
      DependsOn:
        - IncomingTrafficLoadBalancer



#----- AutoScaling policy
  TargetTrackingASP:
    Type: AWS::AutoScaling::ScalingPolicy
    Properties:
      AdjustmentType: PercentChangeInCapacity
      AutoScalingGroupName: !Ref WebServerASG
      PolicyType: TargetTrackingScaling
      TargetTrackingConfiguration: 
        PredefinedMetricSpecification:
          PredefinedMetricType: ALBRequestCountPerTarget
          ResourceLabel: !Sub "${IncomingTrafficLoadBalancer}/${IncomingTargetGroup}"
        TargetValue: 1000
    DependsOn:
      - IncomingTrafficLoadBalancer
            

Outputs:
  IncomingTrafficLoadBalancer:
    Value: 
      !Ref IncomingTrafficLoadBalancer

