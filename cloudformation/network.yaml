Parameters:
  S3Url:
    Type: String

Resources:

  MainNestedVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsHostnames: True
      EnableDnsSupport: True
      Tags:
      - Key: Name
        Value: VPC for the final project

  # Creation and attaching of InternetGateway
  InternetGateway:
    Type: AWS::EC2::InternetGateway
    DependsOn: MainNestedVPC

  AttachIGW:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref MainNestedVPC
      InternetGatewayId: !Ref InternetGateway

  AZ1Network:
    Type: AWS::CloudFormation::Stack
    Properties: 
      TemplateURL: !Sub "${S3Url}/cloudformation/network_az_1.yaml"
      Parameters:
        MainNestedVPC: 
          !Ref MainNestedVPC
        PublicRouteTable:
          !Ref PublicRouteTable
        AccessZone:
          0
    DependsOn: AttachIGW

  AZ2Network:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub "${S3Url}/cloudformation/network_az_1.yaml"
      Parameters:
        MainNestedVPC: 
          !Ref MainNestedVPC
        PublicRouteTable:
          !Ref PublicRouteTable
        AccessZone:
          1
    DependsOn: AttachIGW

  # Creation of Public subnet A in the Availability Zone One: us-east-1a
  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref MainNestedVPC
      Tags:
      - Key: Name
        Value: Public Route Table for Internet Gateway 
    DependsOn: AttachIGW

  # Public Route (0.0.0.0/0 to Internet Gateway)
  PublicRoute:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0 #this allow access to internet
      GatewayId: !Ref InternetGateway

    DependsOn:
      - InternetGateway
      - AttachIGW

  # Associations for Public Subnet A and B
  #



Outputs:

  MainVPC:
    Description: MainVPC
    Value: 
      Fn::GetAtt: [AZ1Network, Outputs.MainNestedVPC]

  FirstPublicSubnet:
    Description: FirstPublicSubnet
    Value: 
      Fn::GetAtt: [AZ1Network, Outputs.FirstPublicSubnet]

  FirstPrivateSubnet:
    Description: FirstPrivateSubnet
    Value: 
      Fn::GetAtt: [AZ1Network, Outputs.FirstPrivateSubnet]

  SecondPrivateSubnet:
    Description: SecondPrivateSubnet
    Value: 
      Fn::GetAtt: [AZ1Network, Outputs.SecondPrivateSubnet]

  ThirdPrivateSubnet:
    Description: ThirdPrivateSubnet
    Value: 
      Fn::GetAtt: [AZ1Network, Outputs.ThirdPrivateSubnet]
