
Parameters:
  
  S3Url:
    Description: Link with Repo
    Type: String

Resources:

  
  DBSecret:
      Type: AWS::SecretsManager::Secret
      Properties:
        Name: !Sub ${AWS::StackName}-db-credentials
        GenerateSecretString:
          SecretStringTemplate: '{"username": "admin"}'
          GenerateStringKey: "password"
          PasswordLength: 16
          ExcludeCharacters: '"@/\'


  ImportedKeyPair:
    Type: AWS::EC2::KeyPair
    Properties:
      KeyName: "public_key"  # Nombre del key pair en AWS
      PublicKeyMaterial: "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCLy2dHptMDN94jchLc3Nr1HFLlNxmlenk+/fotuUvr/RQ/XZG3RmOSLiJZD0a/Xn+rirFgxT/Hy3Qhv2KfR1VYkIGB6IJhoWE+fTi92yZlUOln4E9fPl5tLWHRuTrDwPf8FoFciyJ0+JJpu0qzK+1EEzs+YKRMM1gnM+yihVnnIV3A5ymfp73ysPmwJf7Tsyx30QpkY2Fgck6XLj39X/69MYWIWldYEv3oS+ZtpHXwt6GljoQDb6snGiUbjP7Ib2FcLME5Yjy16kgv0G4ok0tMR81QkOTp8lgexOullQIvpu8BhJODyf8SESOLMmX5t4Xd9KD9vliuinXshgxwkPbR"
      Tags:
        - Key: Name
          Value: "public_key"

  NetworkStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub "${S3Url}/cloudformation/network.yaml"


  SecurityGroups:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub "${S3Url}/cloudformation/security_groups.yaml"

      Parameters:
        MainVPC: 
          Fn::GetAtt: [NetworkStack, Outputs.MainVPC]


  Ec2Template:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub "${S3Url}/cloudformation/ec2_template.yaml"

      Parameters:
        MainVPC: 
          Fn::GetAtt: [NetworkStack, Outputs.MainVPC]
        ImportedKeyPair: 
          !Ref ImportedKeyPair
        InstanceProfileArn:
          arn:aws:iam::013001369500:instance-profile/ec2testrole

        PrivateInstanceSecurityGroup:
          Fn::GetAtt: [SecurityGroups, Outputs.PrivateInstanceSecurityGroup]

        WebServerSecurityGroup:
          Fn::GetAtt: [SecurityGroups, Outputs.WebServerSecurityGroup]

    DependsOn: 
      - NetworkStack
      - SecurityGroups

  BastionHostStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      Parameters:
        BastionInstanceType:
          t3.micro
        MainVPC:
          Fn::GetAtt: [NetworkStack, Outputs.MainVPC]

        ImportedKeyPair:
          !Ref ImportedKeyPair

        BastionSecurityGroup:
          Type: String
          Fn::GetAtt: [SecurityGroups, Outputs.BastionSecurityGroup]

        FirstPublicSubnet:
          Fn::GetAtt: [NetworkStack, Outputs.FirstPublicSubnet]


#
  #LoadBalancer:
    #Type: AWS::CloudFormation::Stack
    #Properties:
      #TemplateURL: !Sub "${S3Url}/cloudformation/ec2_template.yaml"
#
      #Parameters:
        #MainVPC: 
          #Fn::GetAtt: [NetworkStack, Outputs.MainVPC]
        #ImportedKeyPair: 
          #!Ref ImportedKeyPair
        #InstanceProfileArn:
          #arn:aws:iam::013001369500:instance-profile/ec2testrole
#
        #PrivateInstanceSecurityGroup:
          #Fn::GetAtt: [SecurityGroups, Outputs.PrivateInstanceSecurityGroup]
#
        #WebServerSecurityGroup:
          #Fn::GetAtt: [SecurityGroups, Outputs.WebServerSecurityGroup]
#
    #DependsOn: 
      #- NetworkStack
      #- SecurityGroups
#
Outputs:
  ImportedKeyPair:
    Value: !Ref ImportedKeyPair

  


