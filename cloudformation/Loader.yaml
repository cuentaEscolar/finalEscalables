
Parameters:
  
  S3Url:
    Description: Link with Repo
    Type: String

Resources:

  
  SecretsStack:
    Type: AWS::EC2::KeyPair
    Properties:
      TemplateURL: !Sub "${S3Url}/cloudformation/secrets.yaml"

  NetworkStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub "${S3Url}/cloudformation/network.yaml"


  SecurityGroups:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub "${S3Url}/cloudformation/security_groups.yaml"

      Parameters:
        MainVPC: 
          Fn::GetAtt: [NetworkStack, Outputs.MainVPC]


  Ec2Template:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub "${S3Url}/cloudformation/ec2_template.yaml"

      Parameters:
        MainVPC: 
          Fn::GetAtt: [NetworkStack, Outputs.MainVPC]
        ImportedKeyPair: 
          Fn::GetAtt: [SecretsStack, Outputs.ImportedKeyPair]
        InstanceProfileArn:
          arn:aws:iam::013001369500:instance-profile/ec2testrole

        PrivateInstanceSecurityGroup:
          Fn::GetAtt: [SecurityGroups, Outputs.PrivateInstanceSecurityGroup]

        WebServerSecurityGroup:
          Fn::GetAtt: [SecurityGroups, Outputs.WebServerSecurityGroup]

    DependsOn: 
      - NetworkStack
      - SecurityGroups
#
  #BastionHostStack:
    #Type: AWS::CloudFormation::Stack
    #Properties:
      #TemplateURL: !Sub "${S3Url}/cloudformation/bastion_host.yaml"
      #Parameters:
        #BastionInstanceType:
          #t3.micro
        #MainVPC:
          #Fn::GetAtt: [NetworkStack, Outputs.MainVPC]
#
        #ImportedKeyPair:
          #!Ref ImportedKeyPair
      # Fn::GetAtt: [SecretsStack, Outputs.ImportedKeyPair]
#
        #BastionSecurityGroup:
          #Type: String
          #Fn::GetAtt: [SecurityGroups, Outputs.BastionSecurityGroup]
#
        #FirstPublicSubnet:
#
          #!GetAtt NetworkStack.Outputs.FirstPublicSubnet

  #RDSstack:
    #Type: AWS::CloudFormation::Stack
    #Properties:
      #TemplateURL: !Sub "${S3Url}/cloudformation/rds_template.yaml"
      #Parameters:
        #DBSecret:
          #!Ref DBSecret
#
        #MyDatabaseSecurityGroup:
          #Fn::GetAtt: [SecurityGroups, Outputs.MyDatabaseSecurityGroup]
#
        #SecondPrivateSubnet:
          #Fn::GetAtt: [NetworkStack, Outputs.SecondPrivateSubnet]
#

#
  #LoadBalancer:
    #Type: AWS::CloudFormation::Stack
    #Properties:
      #TemplateURL: !Sub "${S3Url}/cloudformation/ec2_template.yaml"
#
      #Parameters:
        #MainVPC: 
          #Fn::GetAtt: [NetworkStack, Outputs.MainVPC]
        #ImportedKeyPair: 
          #!Ref ImportedKeyPair
        #InstanceProfileArn:
          #arn:aws:iam::013001369500:instance-profile/ec2testrole
#
        #PrivateInstanceSecurityGroup:
          #Fn::GetAtt: [SecurityGroups, Outputs.PrivateInstanceSecurityGroup]
#
        #WebServerSecurityGroup:
          #Fn::GetAtt: [SecurityGroups, Outputs.WebServerSecurityGroup]
#
    #DependsOn: 
      #- NetworkStack
      #- SecurityGroups
#
Outputs:
  ImportedKeyPair:
    Value: !Ref ImportedKeyPair

  


